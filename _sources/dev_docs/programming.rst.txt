
Wie-geht-was? Tipps, Tricks, und Skripte für DeepGreen
======================================================


Sammelsurium kleinerer Skripte für DeepGreen
--------------------------------------------

.. code-block:: bash
   :caption:


.. code-block:: bash
   :caption:


.. code-block:: bash
   :caption: **bash-Skript** grand_total_of_routed_and_failed.sh : Liste alle bisherigen Notifikationen auf (``jper/failed`` & ``jper/routed20xxxx``) (von remote)

   #! /usr/bin/env bash
   
   dginst="www.oa-deepgreen.de"
   
   user="green"
   host="sl64.kobv.de"
   elhost="localhost:9200/jper"
   elurl="${elhost}/_mappings"
   
   stepsize=400
   
   maps=$(ssh -n "${user}@${host}" "curl -s '${elurl}'" | jq '.jper.mappings | keys' | grep -o "routed20[0-9]\{4\}\|failed")
   
   mkdir -p "${dginst}_$(date +%F)"
   
   for mapping in ${maps}; do
   	outf="${dginst}_$(date +%F)/${mapping}.json"
   	total=$(ssh -n "${user}@${host}" "curl -s '${elhost}/${mapping}/_count'" | jq '.count')
   	printf "Found %d records in '%s'.\n" "${total}" "${mapping}"
   	>"${outf}"
   	if [ ${total} -gt 0 ]; then
   		for cursor in $(seq 0 ${stepsize} ${total}); do
   			json=$(ssh -n "${user}@${host}" "curl -s '${elhost}/${mapping}/_search?from=${cursor}&size=${stepsize}'")
   			echo "${json}" | jq -c '.hits.hits[]._source | { analysis:.analysis_date, pubid:.provider.id, publisher:.metadata.publisher, doi:.metadata.identifier[] | select(.type=="doi").id, pubdate:.metadata.publication_date, issn:.issn_data, id:.id}' >>"${outf}"
   		done
   		cat "${outf}" | jq -c '[.analysis,.pubid,.publisher,.doi,.pubdate,.issn,.id]' | sed 's/^.\(.*\).$/\1/' | sort -t',' -k 1 >"${outf%.json}.csv"
   	fi
   done

   # resulting CSV header line (not in .csv files included to enable easier concatenation!):
   # Analysis Date, Publisher-ID, Publisher Name, DOI, Publication Date, ISSNs, elastic-ID (DeepGreen)
   #
   # example result:
   # .../some/path$ ls www.oa-deepgreen.de_2019-06-19/*.csv
   # www.oa-deepgreen.de_2019-06-19/failed.csv        www.oa-deepgreen.de_2019-06-19/routed201806.csv
   # www.oa-deepgreen.de_2019-06-19/routed201610.csv  www.oa-deepgreen.de_2019-06-19/routed201807.csv
   # www.oa-deepgreen.de_2019-06-19/routed201612.csv  www.oa-deepgreen.de_2019-06-19/routed201808.csv
   # www.oa-deepgreen.de_2019-06-19/routed201701.csv  www.oa-deepgreen.de_2019-06-19/routed201809.csv
   # www.oa-deepgreen.de_2019-06-19/routed201702.csv  www.oa-deepgreen.de_2019-06-19/routed201810.csv
   # www.oa-deepgreen.de_2019-06-19/routed201705.csv  www.oa-deepgreen.de_2019-06-19/routed201811.csv
   # www.oa-deepgreen.de_2019-06-19/routed201706.csv  www.oa-deepgreen.de_2019-06-19/routed201812.csv
   # www.oa-deepgreen.de_2019-06-19/routed201709.csv  www.oa-deepgreen.de_2019-06-19/routed201901.csv
   # www.oa-deepgreen.de_2019-06-19/routed201711.csv  www.oa-deepgreen.de_2019-06-19/routed201902.csv
   # www.oa-deepgreen.de_2019-06-19/routed201712.csv  www.oa-deepgreen.de_2019-06-19/routed201903.csv
   # www.oa-deepgreen.de_2019-06-19/routed201801.csv  www.oa-deepgreen.de_2019-06-19/routed201904.csv
   # www.oa-deepgreen.de_2019-06-19/routed201802.csv  www.oa-deepgreen.de_2019-06-19/routed201905.csv
   # www.oa-deepgreen.de_2019-06-19/routed201803.csv  www.oa-deepgreen.de_2019-06-19/routed201906.csv
   # 

.. code-block:: bash
   :caption: **bash-Skript**: Ergebnismenge der Benutzer, die unter ``jper/contentlog`` verzeichnet sind (von remote) 

   #! /usr/bin/env bash
   ssh -n "green@sl64.kobv.de" "curl -s 'localhost:9200/jper/contentlog/_search?pretty&size=1000'" |\
   jq -rc '.hits.hits[]._source.user' | sort -u | while read user; do 
      printf "%s\t" "${user}" 
      ssh -n "green@sl64.kobv.de" "curl -s 'localhost:9200/jper/account/${user}'" | jq '._source.email' 
   done

   # example output (2019-06-20):
   # 03fad0a0ae5e4918964485663585adbe	"UBEN@deepgreen.org"
   # 272dd77deffc425b961f3ec4fb8a3993	"GFZPO@deepgreen.org"
   # c0675e0b01864161b77f4654f6910577	"aUBEN@deepgreen.org"
   
   
